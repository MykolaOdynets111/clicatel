{
  "uid" : "47c87ab123c17881",
  "name" : "ReserveAndTransactV4MTNZASuccesstestcases",
  "fullName" : "API.dotCoreTests.regression_Raas_Reserve_and_Transact_V4.ReserveAndTransactV4MTNZASuccesstestcases",
  "historyId" : "20b511a69b3bef97467aafdffcd8cb8f",
  "time" : {
    "start" : 1584432054378,
    "stop" : 1584432059651,
    "duration" : 5273
  },
  "status" : "broken",
  "statusMessage" : "Cannot determine which path implementation to use because the content-type text/plain doesn't map to a path implementation.",
  "statusTrace" : "java.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain doesn't map to a path implementation.\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.path(RestAssuredResponseOptionsGroovyImpl.groovy:409)\r\n\tat io.restassured.internal.RestAssuredResponseOptionsImpl.path(RestAssuredResponseOptionsImpl.java:230)\r\n\tat API.dotCoreTests.regression_Raas_Reserve_and_Transact_V4.ReserveAndTransactV4MTNZASuccesstestcases(regression_Raas_Reserve_and_Transact_V4.java:253)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\r\n\tat org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)\r\n\tat org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "Cannot determine which path implementation to use because the content-type text/plain doesn't map to a path implementation.",
    "statusTrace" : "java.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain doesn't map to a path implementation.\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.path(RestAssuredResponseOptionsGroovyImpl.groovy:409)\r\n\tat io.restassured.internal.RestAssuredResponseOptionsImpl.path(RestAssuredResponseOptionsImpl.java:230)\r\n\tat API.dotCoreTests.regression_Raas_Reserve_and_Transact_V4.ReserveAndTransactV4MTNZASuccesstestcases(regression_Raas_Reserve_and_Transact_V4.java:253)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\r\n\tat org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)\r\n\tat org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n",
    "steps" : [ {
      "name" : "Reserve and Transact V4 Success",
      "time" : {
        "start" : 1584432054378,
        "stop" : 1584432059648,
        "duration" : 5270
      },
      "status" : "broken",
      "statusMessage" : "Cannot determine which path implementation to use because the content-type text/plain doesn't map to a path implementation.",
      "statusTrace" : "java.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain doesn't map to a path implementation.\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.path(RestAssuredResponseOptionsGroovyImpl.groovy:409)\r\n\tat io.restassured.internal.RestAssuredResponseOptionsImpl.path(RestAssuredResponseOptionsImpl.java:230)\r\n\tat API.dotCoreTests.regression_Raas_Reserve_and_Transact_V4.ReserveAndTransactV4MTNZASuccesstestcases(regression_Raas_Reserve_and_Transact_V4.java:253)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\r\n\tat org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)\r\n\tat org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "accountIdentifier",
        "value" : "64ec8907-f41a-441a-b1b8-355ef"
      }, {
        "name" : "purchaseAmount",
        "value" : "5000"
      }, {
        "name" : "channelId",
        "value" : "8"
      }, {
        "name" : "channelName",
        "value" : "test"
      }, {
        "name" : "channelSessionId",
        "value" : "ST-8556726170"
      }, {
        "name" : "clientId",
        "value" : "2"
      }, {
        "name" : "clientTxnRef",
        "value" : "193103796"
      }, {
        "name" : "productId",
        "value" : "30"
      }, {
        "name" : "sourceIdentifier",
        "value" : "0815793852"
      }, {
        "name" : "targetIdentifier",
        "value" : "0815793852"
      }, {
        "name" : "timeStamp",
        "value" : "2020-01-09T09:58:46.170+02:00"
      }, {
        "name" : "feeAmount",
        "value" : "0"
      }, {
        "name" : "currencyCode",
        "value" : "ZAR"
      }, {
        "name" : "fundingSourceId",
        "value" : "3"
      }, {
        "name" : "expectedRaasResponseCode",
        "value" : "0000"
      }, {
        "name" : "expectedMessage",
        "value" : "Processing request (funds reserved)"
      }, {
        "name" : "expectedHTTPResponseCode",
        "value" : "200"
      }, {
        "name" : "expectedRaasResultRequestResponseCode",
        "value" : "0000"
      }, {
        "name" : "expectedRaasResultResponseResponseCode",
        "value" : "202"
      }, {
        "name" : "expectedCTXTransactionResponseCode",
        "value" : "0"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "cfb4c801ed33a07d",
      "name" : "request",
      "source" : "cfb4c801ed33a07d.txt",
      "type" : "text/plain",
      "size" : 1174
    }, {
      "uid" : "a40f22d8aef9aad1",
      "name" : "response",
      "source" : "a40f22d8aef9aad1.txt",
      "type" : "text/plain",
      "size" : 7175
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "package",
    "value" : "API.dotCoreTests.regression_Raas_Reserve_and_Transact_V4"
  }, {
    "name" : "testClass",
    "value" : "API.dotCoreTests.regression_Raas_Reserve_and_Transact_V4"
  }, {
    "name" : "testMethod",
    "value" : "ReserveAndTransactV4MTNZASuccesstestcases"
  }, {
    "name" : "parentSuite",
    "value" : "Reserve and Transact V4 Test Suite"
  }, {
    "name" : "suite",
    "value" : "regression_Raas_Reserve_and_Transact_V4.java"
  }, {
    "name" : "subSuite",
    "value" : "API.dotCoreTests.regression_Raas_Reserve_and_Transact_V4"
  }, {
    "name" : "host",
    "value" : "FANB0610"
  }, {
    "name" : "thread",
    "value" : "32472@FANB0610.TestNG-PoolService-0(22)"
  }, {
    "name" : "framework",
    "value" : "testng"
  }, {
    "name" : "language",
    "value" : "java"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "arg0",
    "value" : "64ec8907-f41a-441a-b1b8-355ef"
  }, {
    "name" : "arg1",
    "value" : "5000"
  }, {
    "name" : "arg10",
    "value" : "2020-01-09T09:58:46.170+02:00"
  }, {
    "name" : "arg11",
    "value" : "0"
  }, {
    "name" : "arg12",
    "value" : "ZAR"
  }, {
    "name" : "arg13",
    "value" : "3"
  }, {
    "name" : "arg14",
    "value" : "0000"
  }, {
    "name" : "arg15",
    "value" : "Processing request (funds reserved)"
  }, {
    "name" : "arg16",
    "value" : "200"
  }, {
    "name" : "arg17",
    "value" : "0000"
  }, {
    "name" : "arg18",
    "value" : "202"
  }, {
    "name" : "arg19",
    "value" : "0"
  }, {
    "name" : "arg2",
    "value" : "8"
  }, {
    "name" : "arg3",
    "value" : "test"
  }, {
    "name" : "arg4",
    "value" : "ST-8556726170"
  }, {
    "name" : "arg5",
    "value" : "2"
  }, {
    "name" : "arg6",
    "value" : "193103796"
  }, {
    "name" : "arg7",
    "value" : "30"
  }, {
    "name" : "arg8",
    "value" : "0815793852"
  }, {
    "name" : "arg9",
    "value" : "0815793852"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "47c87ab123c17881.json",
  "parameterValues" : [ "64ec8907-f41a-441a-b1b8-355ef", "5000", "2020-01-09T09:58:46.170+02:00", "0", "ZAR", "3", "0000", "Processing request (funds reserved)", "200", "0000", "202", "0", "8", "test", "ST-8556726170", "2", "193103796", "30", "0815793852", "0815793852" ]
}